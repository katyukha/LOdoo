stages:
  - lint
  - test
  - coverage

flake8:
  stage: lint
  image: registry.gitlab.com/pipeline-components/flake8:latest
  script:
    - flake8 --verbose .


.test-services: &test-services-definition
  services:
    - name: postgres:14
      alias: db

.test-variables: &test-variables-definition
  POSTGRES_USER: odoo
  POSTGRES_PASSWORD: odoo
  POSTGRES_DB: postgres
  COV_DATA_FILE: coverage.${CI_JOB_NAME}

test-16:
  image: odoo:16.0
  <<: *test-services-definition
  variables:
    <<: *test-variables-definition
    COV_CONTEXT: "odoo:16.0"
    TEST_PY_VERSION: "3"
  before_script:
    - python3 -m pip install coverage
    - python3 -m pip install -r requirements.txt
    #- python3 -m pip install -e .
    # Save configuration to file
    - /entrypoint.sh odoo -s --stop-after-init
  script:
    - bash .ci/test-cli.bash
  after_script:
    - python3 -m coverage report --data-file=coverage.${CI_JOB_NAME}
  coverage: '/^TOTAL\s+\d+\s+\d+\s+(\d+\%)/'
  artifacts:
    name: "$CI_JOB_NAME"
    expire_in: 10 day
    paths:
      - coverage.${CI_JOB_NAME}

test-15:
  image: odoo:15.0
  <<: *test-services-definition
  variables:
    <<: *test-variables-definition
    COV_CONTEXT: "odoo:15.0"
    TEST_PY_VERSION: "3"
  before_script:
    - python3 -m pip install coverage
    - python3 -m pip install -r requirements.txt
    # Save configuration to file
    - /entrypoint.sh odoo -s --stop-after-init
  script:
    - bash .ci/test-cli.bash
  after_script:
    - python3 -m coverage report --data-file=coverage.${CI_JOB_NAME}
  coverage: '/^TOTAL\s+\d+\s+\d+\s+(\d+\%)/'
  artifacts:
    name: "$CI_JOB_NAME"
    expire_in: 10 day
    paths:
      - coverage.${CI_JOB_NAME}

test-14:
  image: odoo:14.0
  <<: *test-services-definition
  variables:
    <<: *test-variables-definition
    COV_CONTEXT: "odoo:14.0"
    TEST_PY_VERSION: "3"
  before_script:
    - python3 -m pip install coverage
    - python3 -m pip install -r requirements.txt
    # Save configuration to file
    - /entrypoint.sh odoo -s --stop-after-init
  script:
    - bash .ci/test-cli.bash
  after_script:
    - python3 -m coverage report --data-file=coverage.${CI_JOB_NAME}
  coverage: '/^TOTAL\s+\d+\s+\d+\s+(\d+\%)/'
  artifacts:
    name: "$CI_JOB_NAME"
    expire_in: 10 day
    paths:
      - coverage.${CI_JOB_NAME}

test-13:
  image: odoo:13.0
  <<: *test-services-definition
  variables:
    <<: *test-variables-definition
    COV_CONTEXT: "odoo:13.0"
    TEST_PY_VERSION: "3"
  before_script:
    - python3 -m pip install coverage
    - python3 -m pip install -r requirements.txt
    # Save configuration to file
    - /entrypoint.sh odoo -s --stop-after-init
  script:
    - bash .ci/test-cli.bash
  after_script:
    - python3 -m coverage report --data-file=coverage.${CI_JOB_NAME}
  coverage: '/^TOTAL\s+\d+\s+\d+\s+(\d+\%)/'
  artifacts:
    name: "$CI_JOB_NAME"
    expire_in: 10 day
    paths:
      - coverage.${CI_JOB_NAME}

test-12:
  image: odoo:12.0
  <<: *test-services-definition
  variables:
    <<: *test-variables-definition
    COV_CONTEXT: "odoo:12.0"
    TEST_PY_VERSION: "3"
  before_script:
    - python3 -m pip install coverage
    - python3 -m pip install -r requirements.txt
    # Save configuration to file
    - /entrypoint.sh odoo -s --stop-after-init
  script:
    - bash .ci/test-cli.bash
  after_script:
    - python3 -m coverage report --data-file=coverage.${CI_JOB_NAME}
  coverage: '/^TOTAL\s+\d+\s+\d+\s+(\d+\%)/'
  artifacts:
    name: "$CI_JOB_NAME"
    expire_in: 10 day
    paths:
      - coverage.${CI_JOB_NAME}

test-11:
  image: odoo:11.0
  <<: *test-services-definition
  variables:
    <<: *test-variables-definition
    COV_CONTEXT: "odoo:11.0"
    TEST_PY_VERSION: "3"
  before_script:
    - python3 -m pip install coverage
    - python3 -m pip install -r requirements.txt
    # Save configuration to file
    - /entrypoint.sh odoo -s --stop-after-init
  script:
    - bash .ci/test-cli.bash
  after_script:
    - python3 -m coverage report --data-file=coverage.${CI_JOB_NAME}
  coverage: '/^TOTAL\s+\d+\s+\d+\s+(\d+\%)/'
  artifacts:
    name: "$CI_JOB_NAME"
    expire_in: 10 day
    paths:
      - coverage.${CI_JOB_NAME}

test-10:
  image: odoo:10.0
  <<: *test-services-definition
  variables:
    <<: *test-variables-definition
    COV_CONTEXT: "odoo:10.0"
    TEST_PY_VERSION: "2"
  before_script:
    - python2 -m pip install --user coverage==5
    - python2 -m pip install .
    # Save configuration to file
    - /entrypoint.sh odoo -s --stop-after-init
  script:
    - bash .ci/test-cli.bash
  after_script:
    - python3 -m coverage report --data-file=coverage.${CI_JOB_NAME}
  coverage: '/^TOTAL\s+\d+\s+\d+\s+(\d+\%)/'
  artifacts:
    name: "$CI_JOB_NAME"
    expire_in: 10 day
    paths:
      - coverage.${CI_JOB_NAME}


coverage:
  image: odoo:16.0
  stage: coverage
  dependencies:
    - test-16
    - test-15
    - test-13
    - test-12
    - test-11
    - test-10
  before_script:
    - python3 -m pip install coverage
  script:
    - python3 -m coverage combine coverage.*
    - python3 -m coverage report
  after_script:
    - python3 -m coverage html
  coverage: '/^TOTAL\s+\d+\s+\d+\s+(\d+\%)/'
  artifacts:
    name: "$CI_JOB_NAME"
    expire_in: 14 day
    paths:
      - htmlcov
      - .coverage
      - coverage.*
